{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/alexis/dev/oto1/moulinette/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alexis/dev/oto1/moulinette\",\"filename\":\"/home/alexis/dev/oto1/moulinette/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alexis/dev/oto1/moulinette\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/alexis/dev/oto1/moulinette/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/alexis/dev/oto1/moulinette",
      "filename": "/home/alexis/dev/oto1/moulinette/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/alexis/dev/oto1/moulinette",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/alexis/dev/oto1/moulinette/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/alexis/dev/oto1/moulinette/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/alexis/dev/oto1/moulinette/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const core = require('@actions/core');\n\nconst github = require('@actions/github');\n\nconst validTitles = ['d01', 'd02', 'd03', 'd04', 'd05', 'd06', 'r00', 'd07', 'd08', 'd08', 'r01'];\n\ntry {\n  const title = github.context.payload?.pull_request?.title;\n\n  if (!title) {\n    core.setFailed(\"not a pull request a missing title\");\n  }\n\n  if (!validTitles.includes(title)) {\n    core.setFailed(\"the title of the pull request must be one of : \" + validTitles.join(\",\"));\n  }\n\n  console.log(\"Testing: \", title);\n\n  const fs = require('fs');\n\n  const files = fs.readdirSync('');\n  files.forEach(e => console.log(e));\n} catch (ex) {\n  core.setFailed(ex.message);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcmUiLCJyZXF1aXJlIiwiZ2l0aHViIiwidmFsaWRUaXRsZXMiLCJ0aXRsZSIsImNvbnRleHQiLCJwYXlsb2FkIiwicHVsbF9yZXF1ZXN0Iiwic2V0RmFpbGVkIiwiaW5jbHVkZXMiLCJqb2luIiwiY29uc29sZSIsImxvZyIsImZzIiwiZmlsZXMiLCJyZWFkZGlyU3luYyIsImZvckVhY2giLCJlIiwiZXgiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQXBCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQXRCOztBQUdBLE1BQU1FLFdBQVcsR0FBRyxDQUNsQixLQURrQixFQUVsQixLQUZrQixFQUdsQixLQUhrQixFQUlsQixLQUprQixFQUtsQixLQUxrQixFQU1sQixLQU5rQixFQU9sQixLQVBrQixFQVFsQixLQVJrQixFQVNsQixLQVRrQixFQVVsQixLQVZrQixFQVdsQixLQVhrQixDQUFwQjs7QUFjQSxJQUFJO0FBRUYsUUFBTUMsS0FBSyxHQUFHRixNQUFNLENBQUNHLE9BQVAsQ0FBZUMsT0FBZixFQUF3QkMsWUFBeEIsRUFBc0NILEtBQXBEOztBQUVBLE1BQUksQ0FBQ0EsS0FBTCxFQUFZO0FBQ1ZKLElBQUFBLElBQUksQ0FBQ1EsU0FBTCxDQUFlLG9DQUFmO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDTCxXQUFXLENBQUNNLFFBQVosQ0FBcUJMLEtBQXJCLENBQUwsRUFBa0M7QUFDaENKLElBQUFBLElBQUksQ0FBQ1EsU0FBTCxDQUFlLG9EQUFvREwsV0FBVyxDQUFDTyxJQUFaLENBQWlCLEdBQWpCLENBQW5FO0FBQ0Q7O0FBRURDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVosRUFBeUJSLEtBQXpCOztBQUVBLFFBQU1TLEVBQUUsR0FBR1osT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsUUFBTWEsS0FBSyxHQUFHRCxFQUFFLENBQUNFLFdBQUgsQ0FBZSxFQUFmLENBQWQ7QUFFQUQsRUFBQUEsS0FBSyxDQUFDRSxPQUFOLENBQWNDLENBQUMsSUFBSU4sT0FBTyxDQUFDQyxHQUFSLENBQVlLLENBQVosQ0FBbkI7QUFHRCxDQXBCRCxDQW9CRSxPQUFPQyxFQUFQLEVBQVc7QUFDWGxCLEVBQUFBLElBQUksQ0FBQ1EsU0FBTCxDQUFlVSxFQUFFLENBQUNDLE9BQWxCO0FBQ0QiLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleGlzL2Rldi9vdG8xL21vdWxpbmV0dGUvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BhY3Rpb25zL2NvcmUnKTtcbmNvbnN0IGdpdGh1YiA9IHJlcXVpcmUoJ0BhY3Rpb25zL2dpdGh1YicpO1xuXG5cbmNvbnN0IHZhbGlkVGl0bGVzID0gW1xuICAnZDAxJyxcbiAgJ2QwMicsXG4gICdkMDMnLFxuICAnZDA0JyxcbiAgJ2QwNScsXG4gICdkMDYnLFxuICAncjAwJyxcbiAgJ2QwNycsXG4gICdkMDgnLFxuICAnZDA4JyxcbiAgJ3IwMScsXG5dXG5cbnRyeSB7XG5cbiAgY29uc3QgdGl0bGUgPSBnaXRodWIuY29udGV4dC5wYXlsb2FkPy5wdWxsX3JlcXVlc3Q/LnRpdGxlXG5cbiAgaWYgKCF0aXRsZSkge1xuICAgIGNvcmUuc2V0RmFpbGVkKFwibm90IGEgcHVsbCByZXF1ZXN0IGEgbWlzc2luZyB0aXRsZVwiKTtcbiAgfVxuXG4gIGlmICghdmFsaWRUaXRsZXMuaW5jbHVkZXModGl0bGUpKSB7XG4gICAgY29yZS5zZXRGYWlsZWQoXCJ0aGUgdGl0bGUgb2YgdGhlIHB1bGwgcmVxdWVzdCBtdXN0IGJlIG9uZSBvZiA6IFwiICsgdmFsaWRUaXRsZXMuam9pbihcIixcIikpO1xuICB9XG5cbiAgY29uc29sZS5sb2coXCJUZXN0aW5nOiBcIiwgdGl0bGUpXG5cbiAgY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuICBjb25zdCBmaWxlcyA9IGZzLnJlYWRkaXJTeW5jKCcnKTtcblxuICBmaWxlcy5mb3JFYWNoKGUgPT4gY29uc29sZS5sb2coZSkpXG5cblxufSBjYXRjaCAoZXgpIHtcbiAgY29yZS5zZXRGYWlsZWQoZXgubWVzc2FnZSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "core",
        "require",
        "github",
        "validTitles",
        "title",
        "context",
        "payload",
        "pull_request",
        "setFailed",
        "includes",
        "join",
        "console",
        "log",
        "fs",
        "files",
        "readdirSync",
        "forEach",
        "e",
        "ex",
        "message"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AAGA,MAAME,WAAW,GAAG,CAClB,KADkB,EAElB,KAFkB,EAGlB,KAHkB,EAIlB,KAJkB,EAKlB,KALkB,EAMlB,KANkB,EAOlB,KAPkB,EAQlB,KARkB,EASlB,KATkB,EAUlB,KAVkB,EAWlB,KAXkB,CAApB;;AAcA,IAAI;AAEF,QAAMC,KAAK,GAAGF,MAAM,CAACG,OAAP,CAAeC,OAAf,EAAwBC,YAAxB,EAAsCH,KAApD;;AAEA,MAAI,CAACA,KAAL,EAAY;AACVJ,IAAAA,IAAI,CAACQ,SAAL,CAAe,oCAAf;AACD;;AAED,MAAI,CAACL,WAAW,CAACM,QAAZ,CAAqBL,KAArB,CAAL,EAAkC;AAChCJ,IAAAA,IAAI,CAACQ,SAAL,CAAe,oDAAoDL,WAAW,CAACO,IAAZ,CAAiB,GAAjB,CAAnE;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,KAAzB;;AAEA,QAAMS,EAAE,GAAGZ,OAAO,CAAC,IAAD,CAAlB;;AACA,QAAMa,KAAK,GAAGD,EAAE,CAACE,WAAH,CAAe,EAAf,CAAd;AAEAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,CAAC,IAAIN,OAAO,CAACC,GAAR,CAAYK,CAAZ,CAAnB;AAGD,CApBD,CAoBE,OAAOC,EAAP,EAAW;AACXlB,EAAAA,IAAI,CAACQ,SAAL,CAAeU,EAAE,CAACC,OAAlB;AACD",
      "sourceRoot": "/home/alexis/dev/oto1/moulinette/",
      "sourcesContent": [
        "const core = require('@actions/core');\nconst github = require('@actions/github');\n\n\nconst validTitles = [\n  'd01',\n  'd02',\n  'd03',\n  'd04',\n  'd05',\n  'd06',\n  'r00',\n  'd07',\n  'd08',\n  'd08',\n  'r01',\n]\n\ntry {\n\n  const title = github.context.payload?.pull_request?.title\n\n  if (!title) {\n    core.setFailed(\"not a pull request a missing title\");\n  }\n\n  if (!validTitles.includes(title)) {\n    core.setFailed(\"the title of the pull request must be one of : \" + validTitles.join(\",\"));\n  }\n\n  console.log(\"Testing: \", title)\n\n  const fs = require('fs');\n  const files = fs.readdirSync('');\n\n  files.forEach(e => console.log(e))\n\n\n} catch (ex) {\n  core.setFailed(ex.message);\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1618307988782
  }
}